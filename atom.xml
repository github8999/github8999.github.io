<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>生命1昊</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-04-13T11:10:39.045Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>_日天昊</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>flex布局</title>
    <link href="http://yoursite.com/2019/04/12/flex%E5%B8%83%E5%B1%80/"/>
    <id>http://yoursite.com/2019/04/12/flex布局/</id>
    <published>2019-04-12T13:46:23.000Z</published>
    <updated>2019-04-13T11:10:39.045Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Flex-布局"><a href="#Flex-布局" class="headerlink" title="Flex 布局"></a>Flex 布局</h1><blockquote><p><strong>网页布局</strong> (layout) 是 CSS 的一个重点应用。布局的传统解决方法, 基于盒状模型(margin,padding…), 依赖display 属性 + position 属性 + float 属性。紧紧是垂直居中就不容易实现。</p></blockquote><blockquote><p><strong>flex布局</strong> Flex布局将成为未来布局的首选方案。</p></blockquote><h2 id="一、什么是Flex布局"><a href="#一、什么是Flex布局" class="headerlink" title="一、什么是Flex布局:"></a>一、什么是Flex布局:</h2><blockquote><p>设为flex布局以后, 子元素的float, clear, vertical-align属性将失效</p></blockquote><p>任何一个容器都可以指定为flex布局<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.box&#123;</span><br><span class="line">    display:flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>行内元素也可以使用Flex布局<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.box&#123;</span><br><span class="line">    display:inline-flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>Webkit 内核的浏览器，必须要加上 -webkit 前缀<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.box&#123;</span><br><span class="line">    display: -webkit-flex; /* safari */</span><br><span class="line">    display: flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><hr><h2 id="二、基本概念"><a href="#二、基本概念" class="headerlink" title="二、基本概念"></a>二、基本概念</h2><blockquote><p>采用Flex布局的元素, 成为Flex 容器(flex container), 简称 “容器”。它的所有子元素都会自动成为容器成员, 成为Flex 项目(flex item), 简称 “项目”。</p></blockquote><blockquote><p>容器默认存在两根轴：水平方向的轴（main axis）和垂直的交叉轴（cross axis）。主轴开始位置与边框的交叉点叫做 main start，结束为止叫做 main end；交叉轴的开始位置叫做 cross start，结束位置叫做cross end。</p></blockquote><blockquote><p>项目默认沿主轴排列。单个项目占据主轴空间叫做 main size，占据的交叉轴空间叫做cross size。</p></blockquote><p><img src="/2019/04/12/flex布局/./flex布局/容器结构.jpg" alt="容器结构"></p><hr><h2 id="三、容器的属性"><a href="#三、容器的属性" class="headerlink" title="三、容器的属性"></a>三、容器的属性</h2><ul><li><p>flex-direction</p></li><li><p>flex-wrap</p></li><li>flex-flow</li><li>justify-content</li><li>align-items</li><li>align-content</li></ul><h3 id="3-1-flex-direction-属性"><a href="#3-1-flex-direction-属性" class="headerlink" title="3.1 flex-direction 属性"></a>3.1 flex-direction 属性</h3><p>flex-direction 属性决定主轴的方向(即项目排列的方向)</p><p><img src="/2019/04/12/flex布局/./flex布局/flex-direction属性.jpg" alt="flex-direction属性"></p><p>它可能有四个值:</p><ul><li><p>row(默认值) :主轴位水平方向, 起点在左端</p></li><li><p>row-reverse :主轴在水平方向, 起点在右端</p></li><li>column :主轴在垂直方式, 起点在上端</li><li>column-reverse :主轴在垂直方式, 起点在下端</li></ul><h3 id="3-2-flex-wrap"><a href="#3-2-flex-wrap" class="headerlink" title="3.2 flex-wrap"></a>3.2 flex-wrap</h3><p>默认情况下,项目都排在一条线(又称 轴线 )上。 flex-wrap 属性定义, 如果一条线排不下,如何换行。</p><p>它可能取三个值</p><ul><li>nowrap (默认) 不换行: 会挤压盒子的宽高; </li></ul><p><img src="/2019/04/12/flex布局/./flex布局/不换行.jpg" alt="不换行"></p><ul><li>wrap 换行, 多余的往下排</li></ul><p><img src="/2019/04/12/flex布局/./flex布局/wrap.jpg" alt="wrap"></p><ul><li>wrap-reverse 换行, 但是多余的往上排</li></ul><p><img src="/2019/04/12/flex布局/./flex布局/wrap-reverse.jpg" alt="wrap-reverse"></p><h3 id="3-3-flex-flow属性"><a href="#3-3-flex-flow属性" class="headerlink" title="3.3 flex-flow属性"></a>3.3 flex-flow属性</h3><p>flex-flow属性 是对 flex-direction属性 和 flex-wrap属性 的简写<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flex-flow: flex-direction || flex-wrap</span><br></pre></td></tr></table></figure></p><h3 id="3-4-justify-content"><a href="#3-4-justify-content" class="headerlink" title="3.4 justify-content"></a>3.4 justify-content</h3><p>justify-content 属性 定义了项目在主轴上的对齐方式</p><ul><li><p>flex-start 从start向end排列, 类似于flex-direction:row;</p></li><li><p>flex-end 从end向start排列, 类似于flex-direction: row-reverse;</p></li><li><p>center 项目居中</p></li><li><p>space-between 两侧紧贴, 项目之间的间隔都相等</p></li><li><p>space-around 项目之间的间隔都相等。所以项目之间的间隔比项目与边框之间的间隔大一倍。</p></li></ul><p><img src="/2019/04/12/flex布局/./flex布局/justify-content.jpg" alt="justify-content.jpg"></p><h3 id="3-5-align-item-属性"><a href="#3-5-align-item-属性" class="headerlink" title="3.5 align-item 属性"></a>3.5 align-item 属性</h3><p>align-item 属性, 定义项目在交叉轴上如何对齐</p><ul><li><p>flex-start, 从交叉轴的start开始向下排列 的start</p></li><li><p>flex-end, 交叉轴的终点对齐。</p></li><li><p>center, 交叉轴的中点对齐</p></li><li><p>baseline, 项目中第一行文字的基线对齐</p></li><li><p>stretch, 如果项目未设置高度或者 auto, 将沾满整个容器的高度。</p><h3 id="3-6-align-content属性"><a href="#3-6-align-content属性" class="headerlink" title="3.6 align-content属性"></a>3.6 align-content属性</h3></li></ul><p>align-content属性定义了主轴方向上多条轴线时, 项目子在交叉轴方向上的对齐方式</p><ul><li><p>flex-start, 从交叉轴的</p></li><li><p>flex-end</p></li><li><p>center</p></li><li><p>space-between</p></li><li><p>space-around</p></li><li><p>stretch</p></li></ul><p><img src="/2019/04/12/flex布局/./flex布局/align-content.png" alt="align-content"></p><hr><h2 id="四、项目属性"><a href="#四、项目属性" class="headerlink" title="四、项目属性"></a>四、项目属性</h2><ul><li><p>order</p></li><li><p>flex-grow</p></li><li><p>flex-shrink</p></li><li><p>flex-basis</p></li><li><p>flex</p></li><li><p>align-self</p></li></ul><h3 id="4-1-order-属性"><a href="#4-1-order-属性" class="headerlink" title="4.1 order 属性"></a>4.1 order 属性</h3><p><code>order</code>属性定义项目的排列顺序。项目越小排列越靠前,默认为0;<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">例：order: &lt;int&gt;</span><br></pre></td></tr></table></figure></p><p><img src="/2019/04/12/flex布局/./flex布局/order.jpg" alt="order"></p><h3 id="4-2-flex-grow属性"><a href="#4-2-flex-grow属性" class="headerlink" title="4.2 flex-grow属性"></a>4.2 flex-grow属性</h3><blockquote><p>如果所有项目都为1的话, 它们将等分项目空间, 如果有一个项目为2, 其余项目为1的话, 则前者占据剩余空间将比其他项目多一倍。</p></blockquote><p><code>flex-grow</code>属性 定义项目的放大比例, 如果容易中有足够大的空间, 会结合比例进行放大。默认为0 ,即有足够的空间也不放大。 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flex-grow:&lt;int&gt;</span><br></pre></td></tr></table></figure><h3 id="4-3-flex-shrink-属性"><a href="#4-3-flex-shrink-属性" class="headerlink" title="4.3 flex-shrink 属性"></a>4.3 flex-shrink 属性</h3><blockquote><p>如果所有项目为1, 当容器空间不足时,都将等比例缩小。如果一个项目的<code>flex-shrink</code>属性为0, 其他都为1 ,当容器空间不足, 其他都缩小时, 它不变。</p></blockquote><blockquote><p>负值对该属性无效。</p></blockquote><p><code>flex-shrink</code> 属性定义了项目的缩小比例,默认为1, 如果容器空间不如, 该项目将缩小。 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flex-shrink:&lt;int&gt;</span><br></pre></td></tr></table></figure><h3 id="4-4-flex-basis-属性"><a href="#4-4-flex-basis-属性" class="headerlink" title="4.4 flex-basis 属性"></a>4.4 flex-basis 属性</h3><p><code>flex-basis</code>属性定义了在分配多余空间之前, 项目占据主轴空间(main size)。浏览器根据这个属性,计算主轴是否有多余空间。它的默认值为auto, 即项目的本来大小。</p><blockquote><p>该属性如果设置成数值, 将占据固定空间<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flex-basis: 数值||auto;</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="4-5-flex属性"><a href="#4-5-flex属性" class="headerlink" title="4.5 flex属性"></a>4.5 flex属性</h3><p><code>flex</code> 属性是 <code>flex-grow</code>,<code>flex-shrink</code>,<code>flex-basis</code>的简写, 默认值为<code>0 1 auto</code>。后两个属性可选。 </p><blockquote><p>该属性有两个快捷值, auto ==&gt; ( 1 1 auto ), none ==&gt; ( 0 0 auto )</p></blockquote><blockquote><p>建议有限使用这个属性, 而不是分开使用 <code>flex-grow</code> <code>flex-shrink</code>和 <code>flex-basis</code>, 因为浏览器会推算默认值。</p></blockquote><h3 id="4-6-align-self属性"><a href="#4-6-align-self属性" class="headerlink" title="4.6 align-self属性"></a>4.6 align-self属性</h3><p><code>align-self</code> 属性允许单个项目有与其他项目不同的对齐方式, 可以覆盖<code>align-item</code> 属性。默认值为<code>auto</code>, 表示继承父元素的<code>align-item属性</code>,如果没有,则等同于stretch</p><blockquote><p>该属性可能取6个值，除了auto，其他都与align-items属性完全一致。</p></blockquote><p><img src="/2019/04/12/flex布局/./flex布局/align-self.jpg" alt="align-self"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Flex-布局&quot;&gt;&lt;a href=&quot;#Flex-布局&quot; class=&quot;headerlink&quot; title=&quot;Flex 布局&quot;&gt;&lt;/a&gt;Flex 布局&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;网页布局&lt;/strong&gt; (layout) 是 CSS 
      
    
    </summary>
    
      <category term="css" scheme="http://yoursite.com/categories/css/"/>
    
    
      <category term="flex" scheme="http://yoursite.com/tags/flex/"/>
    
  </entry>
  
  <entry>
    <title>1-vue基础</title>
    <link href="http://yoursite.com/2019/04/12/1-vue%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2019/04/12/1-vue基础/</id>
    <published>2019-04-12T13:24:52.000Z</published>
    <updated>2019-04-12T13:31:47.132Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="vue框架" scheme="http://yoursite.com/categories/vue%E6%A1%86%E6%9E%B6/"/>
    
    
  </entry>
  
</feed>
